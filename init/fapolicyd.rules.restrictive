# This policy is designed to be as safe as possible. It's intended to
# block execution via the runtime linker and only allow execution by
# trusted ELF and python programs. It also enforces that only trusted
# libraries are allowed. It blocks execution by other languages and
# must be explicitly enabled.
#
# If you wish to modify the list, whitelisting works by first stating
# what is allowed. Then you list what is denied. The rules end with an allow
# anything to prevent unintended blockage to things like media files,
# documents, or anything else applications access that is not a computer
# language.
#
# You can define and use sets with % prefix
# %python=/usr/bin/python2.7,/usr/bin/python3.6
# allow perm=open exe=%python : all
#
%languages=application/x-bytecode.ocaml,application/x-bytecode.python,application/java-archive,text/x-java,application/x-java-applet,application/javascript,text/javascript,text/x-awk,text/x-gawk,text/x-lisp,application/x-elc,text/x-lua,text/x-m4,text/x-perl,text/x-php,text/x-python,text/x-R,text/x-ruby,text/x-script.guile,text/x-tcl,text/x-luatex,text/x-systemtap

# Carve out an exception for dracut
allow perm=any uid=0 : dir=/var/tmp/
allow perm=any uid=0 trust=1 : all

# Prevent execution by ld.so
deny_audit perm=any pattern=ld_so : all

# We have to carve out an exception for the system updaters
# or things go very bad (deadlock).
allow perm=open exe=/usr/bin/rpm : all
allow perm=open exe=%python3_path% comm=dnf : all

# Do not allow malformed ELF even if trusted
deny_audit perm=any all : ftype=application/x-bad-elf

# Only allow known ELF libs - this is ahead of executable because typical
# executable is linked with a dozen or more libraries.
allow perm=open all : ftype=application/x-sharedlib trust=1
deny_audit perm=open all : ftype=application/x-sharedlib

# Only allow known ELF Applications
allow perm=execute all : ftype=application/x-executable trust=1
deny_audit perm=execute all : ftype=application/x-executable

# This is a workaround for kernel thinking this is being executed because it
# occurs during the execve call for an ELF binary. We catch actual execution
# in rule 3.
allow perm=execute all : path=%ld_so_path% trust=1

# Only allow system python executables and libs
# File type by: fapolicyd-cli --ftype /path-to-file
allow perm=any all : ftype=text/x-python trust=1
allow perm=open all : ftype=application/x-bytecode.python trust=1
deny_audit perm=any all : ftype=text/x-python
deny_audit perm=any all : ftype=application/x-bytecode.python

# Allow shell script execution and sourcing
allow perm=any all : ftype=text/x-shellscript

#
# In this next optional languages section, if you would like
# allow the langauge's use uncommenting the appropriate line.
#

# Perl
# Optionally allow it by uncommenting the following
#allow perm=any all : ftype=text/x-perl trust=1
#deny_audit perm=any all : ftype=text/x-perl

# Ocaml
# Optionally allow it by uncommenting the following
#allow perm=any all : ftype=application/x-bytecode.ocaml trust=1
#deny_audit perm=any all : ftype=application/x-bytecode.ocaml

# PHP
# Optionally allow it by uncommenting the following
#allow perm=any all : ftype=text/x-php trust=1
#deny_audit perm=any all : ftype=text/x-php

# Ruby
# Optionally allow it by uncommenting the following
#allow perm=any all : ftype=text/x-ruby trust=1
#deny_audit perm=any all : ftype=text/x-ruby

# Lua
# Optionally allow it by uncommenting the following
#allow perm=any all : ftype=text/x-lua trust=1
#deny_audit perm=any all : ftype=text/x-lua

# Block any other execution
deny_audit perm=execute all : ftype=any

# Data exfiltration
#deny_audit perm=open exe=/usr/bin/ssh : dir=/opt
#deny_audit perm=open exe=/usr/bin/wget : dir=/tmp
#deny_audit perm=any all : device=/dev/cdrom

# Deny all languages not enabled above
deny_audit perm=open all : ftype=%languages

# Allow everything else - access to media files, documents, etc
allow perm=open all : all

